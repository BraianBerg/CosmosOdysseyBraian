// <auto-generated />
using System;
using CosmosOdyssey.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CosmosOdyssey.Data.Migrations
{
    [DbContext(typeof(CosmosOdysseyDbContext))]
    partial class CosmosOdysseyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CosmosOdyssey.Core.Domain.IdAi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PriceListDomainId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PriceListDomainId");

                    b.ToTable("IdAi");
                });

            modelBuilder.Entity("CosmosOdyssey.Core.Domain.PriceListDomain", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PriceListDomains");
                });

            modelBuilder.Entity("CosmosOdyssey.Core.Domain.ProviderAllDomain", b =>
                {
                    b.Property<string>("ProviderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Distance")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FlightEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FlightStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("PriceListDomainId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RouteInfoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProviderId");

                    b.HasIndex("PriceListDomainId");

                    b.ToTable("ProviderAllDomains");
                });

            modelBuilder.Entity("CosmosOdyssey.Core.Domain.IdAi", b =>
                {
                    b.HasOne("CosmosOdyssey.Core.Domain.PriceListDomain", "PriceListDomain")
                        .WithMany()
                        .HasForeignKey("PriceListDomainId");

                    b.Navigation("PriceListDomain");
                });

            modelBuilder.Entity("CosmosOdyssey.Core.Domain.ProviderAllDomain", b =>
                {
                    b.HasOne("CosmosOdyssey.Core.Domain.PriceListDomain", "PriceListDomain")
                        .WithMany()
                        .HasForeignKey("PriceListDomainId");

                    b.Navigation("PriceListDomain");
                });
#pragma warning restore 612, 618
        }
    }
}
